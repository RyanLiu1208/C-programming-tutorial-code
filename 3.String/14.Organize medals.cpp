/************************************
奖牌整理
描述
上完一天的课，小 Z 不但没有一丝疲惫感，反而觉得浑身是劲，好象又回到了童年。
他蹦蹦跳跳地回到家，吃过晚饭很快就做完了作业，抬头一看觉得房间太乱了，
这不进入初三后由于课业繁重一直没时间整理房间，现在有空了是时候该好好整理一下了。
小 Z 首 先想要整理的是他那些心爱的奖牌，这些奖牌记录了小 Z 成长的足迹，
其中有龙城少儿围 棋比赛的银牌，有华罗庚杯少年数学邀请赛的铜牌，
份量最重的当数全国信息学奥林匹克 竞赛（ National Olympiad in Informatics, 简称 NOI ）的金牌，
小 Z 喜欢把他获得的奖牌 都挂在床头，并且成一字排开状，他每得到一枚奖牌就会在床头钉一颗钉子，
将这枚奖牌 挂在所有奖牌的未尾，也就是说小 Z 的奖牌是按获得时间的先后顺序来排列的，
现在小 Z 想把它们按金银铜的顺序排列，即所有的金牌挂在最前面，随后是银牌，最后是铜牌。
小 Z 重排奖牌的方法很特别，他每次都是同时伸出双手各摘下一块奖牌，
然后把这两块奖牌的位置对换一下，即左手摘下的奖牌放到右手摘下的奖牌的位置，
右手摘下的奖牌放到左手摘下的奖牌的位置 ， 咦 ！ 这怎么看上去有点象交换赋值 ， 
太有才了 ！ 现在 小 Z 想考考你， 给定奖牌序列，计算最少需要几次对换操作就可以将所有奖牌按金银铜牌的顺序排好。
输入描述
第一行只有一个正整 数 N 表示奖牌序列的长度 ， 其 中 1 ≤ N ≤ 1000 ；
第二行有 N 个大写字母，每个大写字母代表一枚奖牌，其中 G 代表金牌， S 代表银牌， B 代表铜牌。
输出描述
输出数据仅有一行包含一个整数，表示最少需要几次对换操作。
用例输入
9
SSGBBBSBG
用例输出
4
*******************************************/
#include <iostream>
#include <string>
using namespace std;

int main() {
    int n;
    cin >> n;
    string str;
    cin >> str;
    int countG = 0, countS = 0;
    for (char c : str) {
        if (c == 'G') countG++;
        else if (c == 'S') countS++;
    }
    int wrongG = 0, wrongS = 0;
    // G区统计非G
    for (int i = 0; i < countG; i++) {
        if (str[i] != 'G') wrongG++;
    }
    // S区统计非S
    for (int i = countG; i < countG + countS; i++) {
        if (str[i] != 'S') wrongS++;
    }
    // 最少交换次数
    cout << (wrongG + wrongS) / 2 << endl;
    return 0;
}